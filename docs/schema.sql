-- SQL dump generated using DBML (dbml-lang.org)
-- Database: PostgreSQL
-- Generated at: 2023-12-12T19:12:21.564Z

CREATE TABLE "users" (
  "id" uuid PRIMARY KEY NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "username" varchar UNIQUE,
  "phone" varchar,
  "password_hash" varchar NOT NULL,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz,
  "is_suspended" boolean DEFAULT false,
  "is_deleted" boolean DEFAULT false,
  "is_verified" boolean DEFAULT false,
  "is_email_verified" boolean DEFAULT false,
  "deleted_at" timestamptz,
  "verified_at" timestamptz,
  "suspended_at" timestamptz,
  "login_attempts" int DEFAULT 0,
  "password_last_changed" timestamptz,
  "lockout_duration" int DEFAULT 60,
  "lockout_until" timestamptz,
  "is_mfa_enabled" boolean DEFAULT false
);

CREATE TABLE "user_profiles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "first_name" varchar,
  "last_name" varchar,
  "image_url" VARCHAR,
  -- "updated_at" timestamptz
  "following_count" int DEFAULT 0,
  "followers_count" int DEFAULT 0,
  "entity_type" varchar NOT NULL,

  "posts_count" int DEFAULT 0,
  "header_image_url" VARCHAR,
  "about" VARCHAR (155),
  "website" VARCHAR (100)
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

CREATE TABLE "user_roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "role_id" int NOT NULL
);

CREATE TABLE "email_verification_requests" (
  "id" BIGSERIAL PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "email" varchar NOT NULL,
  "token" varchar UNIQUE NOT NULL,
  "is_verified" boolean DEFAULT false,
  "created_at" timestamptz DEFAULT (now()),
  "expires_at" timestamptz DEFAULT (now() + interval 15 minutes)
);

CREATE TABLE "user_logins" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "login_at" timestamptz DEFAULT (now()),
  "ip_address" inet,
  "user_agent" varchar
);

CREATE TABLE "sessions" (
  "id" uuid PRIMARY KEY NOT NULL,
  "user_id" uuid,
  "refresh_token" varchar UNIQUE NOT NULL,
  "refresh_token_exp" timestamptz NOT NULL,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz,
  "invalidated_at" timestamptz,
  "last_active_at" timestamptz,
  "blocked_at" timestamptz,
  "user_agent" text NOT NULL,
  "ip_address" inet NOT NULL
);

CREATE TABLE "password_reset_requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "email" varchar NOT NULL,
  "token" varchar UNIQUE NOT NULL,
  "used" boolean DEFAULT false,
  "created_at" timestamptz DEFAULT (now()),
  "expires_at" timestamptz
);

CREATE TABLE "account_recovery_requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "email" varchar NOT NULL,
  "used" boolean DEFAULT false,
  "recovery_token" varchar UNIQUE NOT NULL,
  "requested_at" timestamptz DEFAULT (now()),
  "expires_at" timestamptz NOT NULL,
  "completed_at" timestamptz
);

CREATE TABLE "two_factor_secrets" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL, -- UNIQUE,
  "secret_key" varchar NOT NULL,
  "is_active" boolean DEFAULT true
);

CREATE TABLE "two_factor_revocation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "revoked_at" timestamptz,
  "revocation_reason" varchar
  -- "revoked_by" UUID REFERENCES users(id)
);

CREATE TABLE "two_factor_backup_codes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "code" varchar NOT NULL,
  "used" boolean DEFAULT false
);

CREATE TABLE "change_identifier_requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "identifier" varchar NOT NULL,
  "token" varchar UNIQUE NOT NULL,
  "type" varchar NOT NULL,
  "used" boolean DEFAULT false,
  "created_at" timestamptz DEFAULT (now()),
  "expires_at" timestamptz
);

CREATE TABLE "login_failures" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "timestamp" timestamptz,
  "user_agent" varchar,
  "ip_address" inet
);

CREATE TABLE "banned_users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "banned_at" timestamptz,
  "reason" varchar
);

CREATE TABLE "security_questions" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "question" varchar,
  "answer" varchar,
  "expired_at" timestamptz
);

CREATE TABLE "social_providers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE,
  "api_key" varchar,
  "oauth_settings" json
);

CREATE TABLE "social_provider_users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "provider_id" int,
  "provider_user_id" varchar,
  "user_id" uuid,
  "access_token" varchar,
  "refresh_token" varchar
);

CREATE TABLE "audit_logs" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "action" varchar,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz
);

CREATE TABLE "user_preferences" (
  "user_id" uuid,
  "preferences" json
);

CREATE TABLE "notifications" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "title" varchar,
  "action" varchar,
  "content" varchar,
  "details" json,
  "read_at" timestamptz,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "api_keys" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "key" varchar UNIQUE,
  "permissions" json,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz,
  "last_used_at" timestamptz,
  "is_active" boolean,
  "is_deleted" boolean
);

CREATE TABLE "user_api_keys" (
  "user_id" uuid,
  "api_key_id" int
);

CREATE TABLE "posts" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid NOT NULL,
  "content" varchar NOT NULL,
  "total_images" int DEFAULT 0,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz,
  "deleted_at" timestamptz
);

CREATE TABLE "posts_images" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" uuid not null,
  "image_url" varchar,
  "caption" varchar
);

CREATE TABLE "hashtag" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "hash_tag" varchar
);

CREATE TABLE "post_hashtag" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" uuid,
  "hashtag_id" uuid
);

CREATE TABLE "post_comments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "post_id" uuid,
  "comment_text" varchar,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz
);

CREATE TABLE "repost" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "original_post_id" uuid,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "likes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "post_id" uuid
);

CREATE TABLE "posts_metrics" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" uuid NOT NULL,
  "views" int DEFAULT 0,
  "likes" int DEFAULT 0,
  "comments" int DEFAULT 0,
  "reposts" int DEFAULT 0
);

CREATE TABLE "follow" (
  "follower_user_id" uuid not null,
  "following_user_id" uuid not null,
  "created_at" timestamptz DEFAULT (now()),
  PRIMARY KEY ("follower_user_id", "following_user_id")
);

CREATE TABLE "reported_posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" uuid,
  "user_id" uuid,
  "reason" varchar,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "blocked_users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "blocking_user_id" uuid,
  "blocked_user_id" uuid,
  "reason" varchar,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "bookmarks" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "post_id" uuid,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "moderation_queue" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "post_id" uuid,
  "report_reason" varchar,
  "status" varchar,
  "created_at" timestamptz DEFAULT (now())
);

CREATE TABLE "post_mentions" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" uuid,
  "mentioned_user_id" uuid
);

CREATE TABLE "messages" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sender_id" uuid,
  "receiver_id" uuid,
  "content" varchar,
  "created_at" timestamptz DEFAULT (now()),
  "updated_at" timestamptz,
  "read" boolean
);

CREATE TABLE "conversation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id_1" uuid,
  "user_id_2" uuid,
  "last_msg_id" uuid,
  "created_at" timestamptz DEFAULT (now())
);

CREATE INDEX ON "users" ("email", "username", "created_at", "updated_at");

CREATE INDEX ON "user_roles" ("role_id");

CREATE INDEX ON "email_verification_requests" ("user_id", "token", "email", "created_at");

CREATE INDEX ON "user_logins" ("user_id", "login_at");

CREATE INDEX ON "sessions" ("user_id", "refresh_token_exp", "updated_at");

CREATE INDEX ON "password_reset_requests" ("user_id", "token");

CREATE INDEX ON "account_recovery_requests" ("user_id", "recovery_token");

CREATE INDEX ON "change_identifier_requests" ("user_id", "identifier", "token", "expires_at");

CREATE INDEX ON "login_failures" ("user_id", "timestamp");

CREATE INDEX ON "banned_users" ("user_id");

CREATE INDEX ON "social_provider_users" ("provider_id", "provider_user_id");

CREATE INDEX ON "audit_logs" ("user_id", "updated_at", "created_at");

CREATE INDEX ON "notifications" ("user_id", "created_at", "read_at");

CREATE INDEX ON "api_keys" ("user_id", "key", "updated_at", "created_at");

CREATE INDEX ON "user_api_keys" ("user_id", "api_key_id");

CREATE INDEX ON "posts" ("user_id", "id", "created_at");

CREATE INDEX ON "posts_images" ("post_id", "id", "image_url");

CREATE INDEX ON "hashtag" ("hash_tag", "id");

CREATE INDEX ON "post_hashtag" ("hashtag_id", "id", "post_id");

CREATE INDEX ON "post_comments" ("user_id", "id", "post_id");

CREATE INDEX ON "repost" ("user_id", "id", "original_post_id");

CREATE INDEX ON "posts_metrics" ("post_id");

CREATE INDEX ON "follow" ("follower_user_id", "following_user_id");

CREATE INDEX ON "reported_posts" ("post_id", "user_id");

CREATE INDEX ON "blocked_users" ("blocked_user_id", "blocking_user_id");

CREATE INDEX ON "bookmarks" ("user_id", "post_id");

CREATE INDEX ON "moderation_queue" ("user_id", "post_id");

CREATE INDEX ON "post_mentions" ("post_id", "mentioned_user_id");

CREATE INDEX ON "messages" ("sender_id", "receiver_id", "id");

CREATE INDEX ON "conversation" ("user_id_2", "id", "user_id_1");

ALTER TABLE "user_profiles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

ALTER TABLE "email_verification_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_logins" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "password_reset_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "account_recovery_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_secrets" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_revocation" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_backup_codes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "change_identifier_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "login_failures" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "banned_users" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "security_questions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "social_provider_users" ADD FOREIGN KEY ("provider_id") REFERENCES "social_providers" ("id");

ALTER TABLE "social_provider_users" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "audit_logs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "notifications" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "api_keys" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_api_keys" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_api_keys" ADD FOREIGN KEY ("api_key_id") REFERENCES "api_keys" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts_images" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_hashtag" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_hashtag" ADD FOREIGN KEY ("hashtag_id") REFERENCES "hashtag" ("id");

ALTER TABLE "post_comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "post_comments" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "repost" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "repost" ADD FOREIGN KEY ("original_post_id") REFERENCES "posts" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "posts_metrics" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "follow" ADD FOREIGN KEY ("follower_user_id") REFERENCES "users" ("id");

ALTER TABLE "follow" ADD FOREIGN KEY ("following_user_id") REFERENCES "users" ("id");

ALTER TABLE "reported_posts" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "reported_posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "blocked_users" ADD FOREIGN KEY ("blocking_user_id") REFERENCES "users" ("id");

ALTER TABLE "blocked_users" ADD FOREIGN KEY ("blocked_user_id") REFERENCES "users" ("id");

ALTER TABLE "bookmarks" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "bookmarks" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "moderation_queue" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "moderation_queue" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_mentions" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_mentions" ADD FOREIGN KEY ("mentioned_user_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("receiver_id") REFERENCES "users" ("id");

ALTER TABLE "conversation" ADD FOREIGN KEY ("user_id_1") REFERENCES "users" ("id");

ALTER TABLE "conversation" ADD FOREIGN KEY ("user_id_2") REFERENCES "users" ("id");

ALTER TABLE "conversation" ADD FOREIGN KEY ("last_msg_id") REFERENCES "messages" ("id");

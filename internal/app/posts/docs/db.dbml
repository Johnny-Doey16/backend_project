Table posts {
  id uuid [pk]
  user_id uuid [ref: > users.id, not null] 
  content varchar [not null]
  total_images int [default: 0]
  created_at timestamptz [default: `now()`]
  updated_at timestamptz
  deleted_at timestamptz
  Indexes{
    (user_id, id, created_at)
  }
}

Table posts_images {
  id int [pk, increment]
  post_id uuid [ref: > posts.id, not null] 
  image_url varchar
  caption varchar
  Indexes{
    (post_id, id, image_url)
  }
}

Table hashtag {
  id int [pk, increment]
  hash_tag varchar
  Indexes{
    (hash_tag, id)
  }
}

Table post_hashtag {
  id int [pk, increment]
  post_id uuid [ref: > posts.id]
  hashtag_id uuid [ref: > hashtag.id]
  Indexes{
    (hashtag_id, id, post_id)
  }
}

Table post_comments {
  id int [pk, increment]
  user_id uuid [ref: > users.id] 
  post_id uuid [ref: > posts.id]
  comment_text varchar
  created_at current_timestamptz
  updated_at timestamptz
  Indexes{
    (user_id, id, post_id)
  }
}

Table repost {
  id int [pk, increment]
  user_id uuid [ref: > users.id] 
  original_post_id uuid [ref: > posts.id]
  created_at current_timestamptz
  Indexes{
    (user_id, id, original_post_id)
  }
}


Table likes {
  id int [pk, increment]
  user_id uuid [ref: > users.id]
  post_id uuid [ref: > posts.id]
}

Table posts_metrics {
  id int [pk, increment]
  post_id uuid [ref: > posts.id, not null]
  views int [default: 0]
  likes int [default: 0]
  comments int [default: 0]
  reposts int [default: 0]
  Indexes{
    (post_id)
  }
}

Table follow {
  id int [pk, increment]
  follower_user_id uuid [ref: > users.id, not null]
  following_user_id uuid [ref: > users.id, not null]
  created_at current_timestamptz
  Indexes{
    (follower_user_id, id,following_user_id)
  }
}


Table reported_posts {
  id int [pk, increment]
  post_id uuid [ref: > posts.id]
  user_id uuid [ref: > users.id]
  reason varchar
  created_at current_timestamptz
  Indexes{
    (post_id, user_id)
  }
}

Table blocked_users {
  id int [pk, increment]
  blocking_user_id uuid [ref: > users.id]
  blocked_user_id uuid [ref: > users.id]
  reason varchar
  created_at current_timestamptz
  Indexes{
    (blocked_user_id, blocking_user_id)
  }
}

Table bookmarks {
  id int [pk, increment]
  user_id uuid [ref: > users.id]
  post_id uuid [ref: > posts.id] 
  created_at current_timestamptz
  Indexes{
    (user_id, post_id)
  }
}

Table moderation_queue {
  id int [pk, increment]
  user_id uuid [ref: > users.id]
  post_id uuid [ref: > posts.id] 
  report_reason varchar
  status varchar // pending, reviewd, etc
  created_at current_timestamptz
  Indexes{
    (user_id, post_id)
  }
}

Table post_mentions {
  id int [pk, increment]
  post_id uuid [ref: > posts.id]
  mentioned_user_id uuid [ref: > users.id]
  Indexes{
    (post_id, mentioned_user_id)
  }
}

/// For Messaging
Table messages {
  id int [pk, increment]
  sender_id uuid [ref: > users.id]
  receiver_id uuid [ref: > users.id]
  content varchar
  created_at current_timestamptz
  updated_at timestamptz
  read boolean
  Indexes{
    (sender_id, receiver_id, id)
  }
}

Table conversation {
  id int [pk, increment]
  user_id_1 uuid [ref: > users.id]
  user_id_2 uuid [ref: > users.id]
  last_msg_id uuid [ref: > messages.id]
  created_at current_timestamptz
  Indexes{
    (user_id_2, id,user_id_1)
  }
}
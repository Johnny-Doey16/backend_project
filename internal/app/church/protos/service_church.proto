syntax = "proto3";

package pb;

import "google/protobuf/empty.proto";
import "rpc_church.proto";
import "church.proto";
import "denomination.proto";
import "church_group.proto";
import "church_project.proto";
import "rpc_news.proto";
import "rpc_church_acct.proto";
import "church_program.proto";

option go_package = "github.com/steve-mir/diivix_backend/pb";

// The service definition
service ChurchService {
  rpc AddDenomination(AddDenominationRequest) returns (AddDenominationResponse);
  rpc GetDenominationList(GetDenominationRequest) returns (GetDenominationResponse);
  // Register a new church
  rpc CreateChurch(Church) returns (CreateChurchResponse);
  // Join or leave a denomination
  rpc ChangeDenominationMembership(MembershipChangeRequest) returns (MembershipChangeResponse);
  // Join or leave a church
  rpc ChangeChurchMembership(MembershipChangeRequest) returns (MembershipChangeResponse);
  // Search for churches
  rpc SearchChurches(SearchRequestChurch) returns (SearchChurchResponse);
  // Search nearby churches
  rpc SearchNearbyChurches(SearchRequestChurch) returns (stream Church);
  // Select a denomination to join
  rpc SelectDenomination(MembershipChangeRequest) returns (google.protobuf.Empty); // FIXME: Check if to remove
  // Search nearby churches
  rpc GetChurchProfile(GetChurchProfileRequest) returns (GetChurchProfileResponse);
  // Get church the current user belongs to
  rpc GetUserChurch(GetUserChurchRequest) returns (GetUserChurchResponse);

  rpc GetChurchMembers(GetChurchMembersRequest) returns (stream GetChurchMembersResponse);

  // ! Church projects
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {};
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {};
  rpc MarkProjectCompleted(MarkProjectCompletedRequest) returns (MarkProjectCompletedResponse) {};
  rpc GetChurchProjects(GetChurchProjectsRequest) returns (stream GetChurchProjectsResponse) {}
  rpc CreateProjectDonate(ProjectDonationRequest) returns (ProjectDonateResponse) {}
  rpc GetProjectDetails(GetProjectDetailsRequest) returns (ChurchProject) {}
  rpc GetProjectContributors(GetProjectDetailsRequest) returns (stream ProjectContributor) {}
  // rpc GetDonationAnalytics(DonationAnalyticsRequest) returns (DonationAnalyticsResponse) {}

  // ! Church Announcements
  rpc CreateAnnouncement(CreateAnnouncementRequest) returns (CreateAnnouncementResponse) {};
  rpc GetChurchAnnouncements(GetChurchAnnouncementsRequest) returns (stream GetAnnouncementsResponse) {};
  rpc GetAnnouncementsForUser(GetAnnouncementsForUserRequest) returns (stream GetAnnouncementsResponse) {};
  rpc UpdateChurchAccountDetails(UpdateAccountDetailsRequest) returns (UpdateAccountDetailsResponse) {};

  // Church programs
  rpc CreateProgram(CreateChurchProgramRequest) returns (CreateChurchProgramResponse) {};
  rpc GetChurchPrograms(GetChurchProgramsRequest) returns (stream GetChurchProgramsResponse) {};
  rpc EditChurchProgram(CreateChurchProgramRequest) returns (CreateChurchProgramResponse) {};
  rpc DeleteChurchProgram(DeleteChurchProgramRequest) returns (CreateChurchProgramResponse) {};
  

  // TODO: Assign admin: pastor, cathecist, fin sec etc.

  // TODO: UNDONE
  // Group service
  rpc CreateGroup(Group) returns (Group);
  rpc GetGroup(GroupId) returns (Group);
  rpc UpdateGroup(Group) returns (Group);
  rpc DeleteGroup(GroupId) returns (google.protobuf.Empty);
  rpc ListGroups(google.protobuf.Empty) returns (GroupList);
  
  // UserGroupMembership service
  rpc CreateMembership(UserGroupMembership) returns (UserGroupMembership);
  rpc GetMembership(GroupMembershipId) returns (UserGroupMembership);
  rpc UpdateMembership(UserGroupMembership) returns (UserGroupMembership);
  rpc DeleteMembership(GroupMembershipId) returns (google.protobuf.Empty);
  rpc ListMemberships(GroupMembershipId) returns (UserGroupMembershipList);
  
  // GroupForums service
  rpc CreateGroupForum(GroupForum) returns (GroupForum);
  rpc GetGroupForum(GroupForumId) returns (GroupForum);
  rpc UpdateGroupForum(GroupForum) returns (GroupForum);
  rpc DeleteGroupForum(GroupForumId) returns (google.protobuf.Empty);
  rpc ListGroupForums(GroupForumId) returns (GroupForumList);

  // Organization service
  rpc CreateOrganization(Organization) returns (Organization);
  rpc GetOrganization(OrganizationId) returns (Organization);
  rpc UpdateOrganization(Organization) returns (Organization);
  rpc DeleteOrganization(OrganizationId) returns (google.protobuf.Empty);
  rpc ListOrganizations(google.protobuf.Empty) returns (OrganizationList);
  
  // UserOrganizationMembership service
  rpc CreateOrganizationMembership(UserOrganizationMembership) returns (UserOrganizationMembership);
  rpc GetOrganizationMembership(OrganizationMembershipId) returns (UserOrganizationMembership);
  rpc UpdateOrganizationMembership(UserOrganizationMembership) returns (UserOrganizationMembership);
  rpc DeleteOrganizationMembership(OrganizationMembershipId) returns (google.protobuf.Empty);
  rpc ListOrganizationMemberships(OrganizationMembershipId) returns (UserOrganizationMembershipList);
  
  // OrganizationForums service
  rpc CreateOrganizationForum(OrganizationForum) returns (OrganizationForum);
  rpc GetOrganizationForum(OrganizationForumId) returns (OrganizationForum);
  rpc UpdateOrganizationForum(OrganizationForum) returns (OrganizationForum);
  rpc DeleteOrganizationForum(OrganizationForumId) returns (google.protobuf.Empty);
  rpc ListOrganizationForums(OrganizationForumId) returns (OrganizationForumList);
}